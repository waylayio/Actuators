{
  "name": "groupCommands",
  "version": "0.0.2",
  "type": "actuator",
  "script": "//{ \"q\": \"hello:world\"}\nvar query = waylayUtil.getProperty(options, \"query\")\nconst command = waylayUtil.getProperty(options, \"command\")\n\nif(!_.isObject(query))\n    try { query = JSON.parse(query) } catch (err){ console.log(\"err\", err)}\n\nconsole.log('query', query)\n\nvar commandsP = function(id) {\n    console.log(\"add command for resource\", id)\n   return waylay.resources.executeCommand(id, command, {})\n}\n\nvar commands = []\nwaylay.resources.search(query).then(response =>{\n    _.each( response.values, v=>{ \n        commands.push(commandsP(v.id))\n    })\n}).then(response =>{\nPromise.all(commands)\n.then((response) => {\n    console.log(response)\n    send()\n}).catch(err => send(new Error(err)))    \n}).catch(err => send(new Error(err)))    \n",
  "metadata": {
    "author": "",
    "category": "Waylay",
    "description": "Composite command, it execute commands for set of resources.\nquery should be in format { \"q\": \"hello:world\"}",
    "iconURL": "https://static.waylay.io/plugs/icons/groupCommands.png",
    "supportedStates": [],
    "requiredProperties": [
      "command",
      "query"
    ],
    "requiredRawData": []
  }
}
