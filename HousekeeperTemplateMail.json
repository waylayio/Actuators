{"name":"HousekeeperTemplateMail","version":"1.0.0","type":"actuator","script":"start()\n    .then(_ => send())\n    .catch(err => {\n        console.log(err)\n        send(new Error(`Sending the SMS failed with following error: ${err.message}`))\n    })\n\n\nasync function start () {\n    const toMail = await getSandboxProperty('TO')\n    const fromMail = await getSandboxProperty('FROM')\n    const replyTo = await getSandboxProperty('REPLY', fromMail)\n    const message = await getSandboxProperty('MESSAGE')\n    const subject = await getSandboxProperty('SUBJECT')\n    const mandrillKey = await getSandboxProperty('MANDRILL_KEY', options.globalSettings.MANDRILL_KEY)\n    \n    const messageParsed = waylayUtil.template(options, message)\n    const subjectParsed = waylayUtil.template(options, subject)\n    \n    const recipientList = toMail.split(',')\n    const mailPromises = recipientList.map(recipient => {\n        const mandrillMessage = {\n            key: mandrillKey,\n            send_at:  options.requiredProperties.send_at,\n            message: {\n                    html: messageParsed,\n                    subject:  subjectParsed,\n                    from_email: fromMail,\n                    from_name: fromMail,\n                    to: [{\n                        email: recipient,\n                        name: recipient,\n                        type: \"to\"\n                    }],\n                    headers: {\n                        \"Reply-To\": replyTo\n                    }\n                }\n            }\n\n        const requestOptions = {\n          url: 'https://mandrillapp.com/api/1.0/messages/send.json\"',\n          json: mandrillMessage\n        }\n        \n        return requestP(requestOptions)\n    })\n    \n    return Promise.all(mailPromises)\n}\n\n\nasync function getSandboxProperty (key, defaultValue) {\n    const vaultKeyStart = 'VAULT:'\n    \n    const enhancedProperty = waylayUtil.getProperty(options, key) || defaultValue || ''\n\n    if (_.isEmpty(enhancedProperty) || !enhancedProperty.startsWith(vaultKeyStart)) return enhancedProperty\n    \n    const vaultKey = enhancedProperty.replace(vaultKeyStart, '')\n    \n    return waylay.vault.get(vaultKey)\n        .then(res => {\n            console.log(`Successfully got key from vault ${vaultKey} -> ${res}`)\n            return res\n        })\n        .catch(err => {\n            console.error(`Failed to get property '${enhancedProperty}' from vault`, err)\n            throw err\n        })\n}\n\n","metadata":{"author":"","category":"Mail","description":"Batch Mail actuator.\nMessage and subject are parsed using waylayUtil.template function.\n\nInput parameters are:\n<ul>\n<li>from (make sure you have registered domain)</li>\n<li>to (comma seperated list)</li>\n<li>message</li>\n<li>subject</li>\n<li>reply (optional)</li>\n<li>send_at (optional), when this message should be sent as a UTC timestamp in YYYY-MM-DD HH:MM:SS format. If you specify a time in the past, the message will be sent immediately.</li>\n<li>pdfURL (optional), link to the pdf that will be attached to the mail</li>\n</ul>\n\nYou will have to set the property MANDRILL_KEY through the properties or the global settings\n\nActuator requires <strong>MANDRILL_KEY</strong> in the global settings\n","iconURL":"https://static.waylay.io/plugs/icons/mail.png","supportedStates":[],"requiredProperties":["FROM","TO","MESSAGE","SUBJECT","REPLY","MANDRILL_KEY"],"requiredRawData":[]}}