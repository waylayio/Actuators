{
  "name": "slackPostMessage",
  "version": "0.0.8",
  "type": "actuator",
  "script": "var channel = options.requiredProperties.channel;\nvar message = waylayUtil.template(options, \"message\")\nvar token = options.globalSettings.SLACK_KEY || options.requiredProperties.token\nvar method = options.requiredProperties.method || 'chat.postMessage'\nvar username = options.requiredProperties.username || 'waylay_bot'\n\nif(token === undefined || channel === undefined || message === undefined){\n    send(new Error(\"Error missing properties\"));\n} else {\n        \n        var requestOptions = {\n          url: 'https://slack.com/api/' + method,\n          qs: {\n              text: waylayUtil.template(options, options.requiredProperties.message),\n              channel: channel,\n              token: token,\n              username : username\n          }\n        };\n        request.post(requestOptions, function (error, response, body) {\n            try{\n                console.log(body);\n                var res = JSON.parse(body);\n                if (!error && res.ok) {\n                    send();\n                }else{\n                 send(new Error(res.error));\n                }\n            } catch(err){\n                send(new Error(err));\n            }\n        });\n}\n\n      ",
  "metadata": {
    "author": "Veselin",
    "category": "Slack",
    "description": "Posts the slack message.\nInput arguments are:\n<ul>\n<li>message to be posted, it is pre-processed by the util template</li>\n<li>token, which either comes from the global settings (SLACK_KEY) or provided as the input</li>\n<li>method, if left empty, defaul is postMessage</li>\n<li>username, user of the SLACK</li>\n</ul>",
    "documentationURL": "https://api.slack.com/methods/chat.postMessage",
    "iconURL": "https://static.waylay.io/plugs/icons/slack.png",
    "supportedStates": [],
    "requiredProperties": [
      "message",
      "channel",
      "method",
      "token",
      "username"
    ],
    "requiredRawData": []
  }
}
