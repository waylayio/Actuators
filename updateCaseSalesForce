{
  "name": "updateCaseSalesForce",
  "version": "0.0.9",
  "type": "actuator",
  "script": "var user = options.globalSettings.salesForceUser\nvar token = options.globalSettings.salesForceToken\nvar caseObject = { }\ncaseObject.Id = waylayUtil.getProperty(options, \"Id\")\n\ncaseObject.Subject = waylayUtil.getProperty(options, \"Subject\")\ncaseObject.Description = waylayUtil.getProperty(options, \"Description\")\ncaseObject.Status = waylayUtil.getProperty(options, \"Status\")\ncaseObject.Priority = waylayUtil.getProperty(options, \"Priority\")\ncaseObject.AssetId = waylayUtil.getProperty(options, \"AssetId\")\ncaseObject.AccountId = waylayUtil.getProperty(options, \"AccountId\")\ncaseObject.Reason = waylayUtil.getProperty(options, \"Reason\")\ncaseObject.OwnerId = waylayUtil.getProperty(options, \"OwnerId\")\ncaseObject.Product__c = waylayUtil.getProperty(options, \"Product__c\")\n\nvar comment = waylayUtil.getProperty(options, \"Comment\")\n\ncaseObject = _.reduce(caseObject, (acc, v, k) => {\n    if (v) {\n        acc[k] = v   \n    }\n    return acc\n}, {})\n\nif(caseObject.Subject)\n    caseObject.Subject = waylayUtil.template(options, caseObject.Subject)\nif(caseObject.Description)\n    caseObject.Description = waylayUtil.template(options, caseObject.Description)\nif(caseObject.Reason)\n    caseObject.Reason = waylayUtil.template(options, caseObject.Reason)\n\nif(comment)\n    comment= waylayUtil.template(options, comment)\n\nconsole.log(\"caseObject\", caseObject)\n\nif(user === undefined || token === undefined) {\n    send(new Error(\"missing inputs\"))\n}\nelse {\n    try{\n        var conn = new jsforce.Connection()\n        conn.login(user, token, function(err, res){\n            if (err) { \n              console.error(err)\n              send(new Error(err))\n            } else{\n                 if(comment) {\n                    console.log(\"add only comment\")\n                        conn.sobject(\"CaseComment\").insert({\n                        CommentBody: comment,\n                        ParentId: caseObject.Id\n                    }, function(err, ret) {\n                        if (err) { \n                           console.error(err)\n                           send(new Error(err))\n                        } else {\n                            send(null, {message: JSON.stringify(ret)});\n                        }\n                  })\n                 } else {\n                    conn.sobject(\"Case\").update(caseObject, function(err, ret) {\n                        if (err) { \n                           console.error(err)\n                           send(new Error(err))\n                        } else {\n                            send(null, {message: JSON.stringify(ret)});\n                        }\n                    })\n                 }\n            }\n        })\n    }\n    catch(err){\n        console.error(err)\n        send(new Error(err))\n    }\n}\n",
  "metadata": {
    "author": "",
    "category": "SalesForce",
    "description": "Add case in SalesForce, all fields are optional except Id.\nIf accountId is not provided, it will be using the account\nof the person to who belongs the API token.\nIf AssetId it will take waylay resource as AssetId.\nIf comment field is not empty, it will only update the comment field of the case.",
    "iconURL": "https://static.waylay.io/plugs/icons/salesforce-update-case.png",
    "supportedStates": [],
    "requiredProperties": [
      "Subject",
      "Status",
      "Priority",
      "AssetId",
      "AccountId",
      "Reason",
      "OwnerId",
      "Product__c",
      "Id",
      "Comment"
    ],
    "requiredRawData": []
  }
}
