{
  "name": "waylayClearAlarm",
  "version": "0.0.12",
  "type": "actuator",
  "script": "var resource = waylayUtil.getProperty(options, \"resource\") || waylayUtil.getResource(options)\nconst type = waylayUtil.getProperty(options, \"type\")\n\nif(resource === '$')\n  resource = options.node.NAME\n\n\nvar alarmFilter = {\n    source: resource,\n    status: ['ACTIVE', 'ACKNOWLEDGED'],\n    all: true\n}\nif (type !=='') {\n    alarmFilter.type = type\n}\n\nvar findAlarms = function(alarmFilter){\n    console.log(\"findAlarms \" + JSON.stringify(alarmFilter))\n    return waylay.alarms.search(alarmFilter)\n}\n\nvar clearAlarm = function(alarm) {\n    console.log(\"clear alarm \" + alarm.id)\n    return waylay.alarms.update(alarm.id, { status: 'CLEARED'})\n}\n\n\nif(resource === undefined || resource === \"\"){\n    send(new Error(\"resource not defined\"))\n} else {\n    findAlarms(alarmFilter)\n      .then(function(alarm) {\n          if (alarm.alarms) {\n              console.log(\"Found \" + alarm.alarms.length + \" alarms to clear\")\n              Promise.all(alarm.alarms.map(clearAlarm))\n              .then(function() {\n                console.log(\"DONE\")\n                send()\n              })\n              .catch(function(err){\n                send(new Error(\"Clearing alarms failed: \" + err))\n              });\n          } else {\n              console.log('No alarms to clear')\n              send()\n          }\n      })\n      .catch(function(err){\n          console.log(err)\n          send(err)\n      })\n}\n\n\n\n\n",
  "metadata": {
    "author": "",
    "category": "Waylay",
    "description": "Clear all alarms for a given resource and type.\n\n",
    "documentationURL": "",
    "iconURL": "https://s3.eu-central-1.amazonaws.com/static.waylay.io/plugs/icons/green_bell.png",
    "supportedStates": [],
    "requiredProperties": [
      "resource",
      "type"
    ],
    "requiredRawData": []
  }
}
