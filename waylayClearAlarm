{
  "name": "waylayClearAlarm",
  "version": "0.0.3",
  "type": "actuator",
  "script": "var type = options.requiredProperties.type \nvar resource = waylayUtil.getProperty(options, \"resource\") || waylayUtil.getResource(options)\n\nvar searchAlarms = {\n    type:type,\n    source: resource,\n    size: 5\n}\n\n\n\nif(resource === undefined){\n    send(new Error(\"resource not defined\"))\n} else {\n     waylay.alarms.search(searchAlarms).then(response =>{\n        var promises = _.compact(_.map(response.alarms, a=>{\n            if(a.status.toLowerCase() !== \"cleared\"){\n                var aa = {\n                    id: a.id,\n                    status : \"CLEARED\"\n                }\n                console.log(\"clear alarm\", a)\n                return waylay.alarms.update(a.id, aa)\n            }\n        }))\n        if(promises.lenght > 1)\n            promises.all(send)\n        else\n            send()\n    }).catch(function(err){\n        console.log(err)\n        send(new Error(\"Storing alarm failed: \" + err))\n    });\n}\n\n\n\n\n",
  "metadata": {
    "author": "",
    "category": "Waylay",
    "description": "Clear all alarms for a given resource and type.\n\n",
    "documentationURL": "",
    "iconURL": "https://s3.eu-central-1.amazonaws.com/static.waylay.io/plugs/icons/green_bell.png",
    "supportedStates": [],
    "requiredProperties": [
      "resource",
      "type"
    ],
    "requiredRawData": []
  }
}
