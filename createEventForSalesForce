{
  "name": "createEventForSalesForce",
  "version": "0.0.7",
  "type": "actuator",
  "script": "/**\n * main() is called at the end of this file.\n */\nasync function main () {\n        \n    let caseObject = { }\n    caseObject.Subject = waylayUtil.template(options, options.requiredProperties.subject)\n    caseObject.Location = waylayUtil.getProperty(options, \"location\") || ''\n    caseObject.ActivityDateTime = moment().toISOString()\n    caseObject.DurationInMinutes = waylayUtil.getProperty(options, \"duration\") || 1\n    // trying to manipulate a const instead of let will get stuck until timeout\n    caseObject = _.reduce(caseObject, (acc, v, k) => {\n        if (v) acc[k] = v   \n        return acc\n    }, {})\n    \n    if(!caseObject.Subject) \n        send(new Error('No subject provided'))\n    \n    try {\n        const conn = await getSalesforceConnection()\n        conn.sobject(\"Event\").create(caseObject, function(err, ret) {\n            if (err) { \n                send(new Error(err))\n            } else {\n                send(null, { message: JSON.stringify(ret) })\n            }\n        })\n    } catch(error) {\n        send(error)\n    }\n}\n\n/**\n * @return Salesforce Connection\n */\nasync function getSalesforceConnection () {\n    try {\n        // TRY TO GET A SALESFORCE CONNECTION USING HOARD\n        const connHoard = await getSalesforceConnectionWithHoard()\n        console.log('connection is made with hoard')\n        return connHoard\n    } catch (hoardError) {\n        try {\n            // TRY TO USE A SALESFORCE CONNECTION USING GLOBAL SETTINGS: 'salesForceUser' and 'salesForceToken'\n            const connGlobalSettings = await getSalesforceConnectionWithGlobalSettings()\n            console.log('connection is made with global settings')\n            return connGlobalSettings\n        } catch(globalSettingsError){\n             throw new Error(`\n                MESSAGE: 'unable to get salesforce connection trough either hoard or global settings', \\n\n                HOARD ERROR: ${hoardError} \\n \n                GLOBAL SETTINGS ERROR: ${globalSettingsError} \\n\n                POSSIBLE SOLUTION: Connect Salesforce trough channels or set 'salesForceUser' and 'salesForceToken' in the global settings\n            `)\n        }\n    }\n}\n\nasync function getSalesforceConnectionWithHoard() {\n    const user = waylayUtil.getProperty(options, \"user\") || \"organisation\"\n\n    const tokens = await waylayUtil.getAuthTokens(options, user, \"salesforce\")\n\n    if(!user || !tokens) \n        throw new Error('No user or token provided via Hoard service')\n    \n    const conn = new jsforce.Connection({\n      instanceUrl : 'https://eu26.salesforce.com',\n      accessToken : tokens.access_token\n    })\n    \n    return conn\n}\n\nasync function getSalesforceConnectionWithGlobalSettings() {\n    const user = options.globalSettings.salesForceUser\n    const token = options.globalSettings.salesForceToken\n\n    if(!user || !token) \n        throw new Error('No user or token provided via global settings')\n    \n    const conn = new jsforce.Connection()\n    return new Promise((resolve, reject) => {\n        conn.login(user, token, function(err, res) {\n            err ? reject(err) : resolve(conn)\n        })\n    })\n}\n\nmain()\n\n",
  "metadata": {
    "author": "",
    "category": "SalesForce",
    "description": "Create event for the salesforce.\nSubject is mandatory, if duration is not given it default \nvalue is 1min.",
    "iconURL": "https://static.waylay.io/plugs/icons/create-event-for-salesforce.png",
    "supportedStates": [],
    "requiredProperties": [
      "subject",
      "location",
      "duration"
    ],
    "requiredRawData": []
  }
}
