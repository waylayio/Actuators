{
  "name": "mongloLabStoreItem",
  "version": "1.0.5",
  "type": "actuator",
  "script": "var db = options.requiredProperties.db || options.globalSettings.mongodb;\nvar collection = options.requiredProperties.collection;\nvar token = options.requiredProperties.token || options.globalSettings.mongoKey;\nvar name = options.requiredProperties.name;\nvar payload = options.requiredProperties.payload;\n\nvar data = {\n    node: options.node.NODE,\n    time: new Date(),\n    resource: waylayUtil.getResource(options)\n}\n\n\nvar getData = function(options, payload){\n    var _msg;\n    try{\n       _msg = waylayUtil.template(options, payload);    \n       if (typeof _msg === 'string') {\n           console.log(\"trying to parse to JSON\");\n           _msg = JSON.parse(_msg);\n        }\n        console.log(\"Parsed using template\", _msg);\n    } catch(err){\n        console.log(\"eval failed with \" + err);\n        console.log(\"trying using raw data\");\n        try {\n            _msg = waylayUtil.getRawData(options, payload);\n        } catch(err){\n            console.log(\"parsing as raw data failed\");\n        }\n    } \n    return _msg;\n}\n\nif(payload){\n    var msg = getData(options, payload)\n    console.log(\"PAYLOAD\", msg);\n    if(msg){\n        _.extend(data, msg);\n    }\n}\n\nif(name){\n    data.name = getData(options, name);\n}\nif(options.task && options.task.TASK_ID){\n    data.TASK_ID = options.task.TASK_ID;\n}\n    \n\nif(token && db){\n  var url = \"https://api.mongolab.com/api/1/databases/\" + db + \"/collections/\" + collection + \"?apiKey=\"+token;\n  var options = {\n    url: url,\n    json: data\n  };\n  var callback = function(error, response, body) {\n    if (!error && response.statusCode == 200) {\n      console.log(body);\n      send();\n    }else{\n      send(new Error(\"Calling mongolab failed: \" + error + \" \" + body));\n    }\n  };\n  request.post(options, callback);\n}else{\n  send(new Error(\"Missing properties\"));\n}",
  "metadata": {
    "author": "",
    "category": "Experimental",
    "description": "mongloLabStoreItem actuator stores data in the mongolab with the following entries:\n\n<ul>\n<li>payload: if defined, the db entry will be extened with this payload</li>\n<li>resource: resource</li>\n<li>node: node name</li>\n<li>TASK_ID: task ID</li>\n<li>time: time it was triggered, in UTC milis</li>\n</ul>\n\nProperties:\n<ul>\n<li>db: database name</li>\n<li>collection</li>\n<li>token: mongo token, unless defined in GLOBAL settings</li>\n<li>payload: if defined, the db entry will be extened with payload</li>\n</ul>",
    "documentationURL": "http://docs.mongolab.com/restapi/",
    "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/mongolab.png",
    "supportedStates": [],
    "requiredProperties": [
      "db",
      "token",
      "collection",
      "payload"
    ],
    "requiredRawData": []
  }
}
