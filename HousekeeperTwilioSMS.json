{"name":"HousekeeperTwilioSMS","version":"1.0.0","type":"actuator","script":"start()\n    .then(_ => send())\n    .catch(err => {\n        console.log(err)\n        send(new Error(`Sending the SMS failed with following error: ${err.message}`))\n    })\n\n/**\n * Starts the sms sending,\n * will try and get all the properties from vault if they're starting with VAULT.\n * Else it will use the unencrypted value that was passed or in some cases the GLOBAL config\n */\nasync function start () {\n    const accountSID = await getSandboxProperty('TWILIO_ACCOUNT_SID', options.globalSettings.TWILIO_ACCOUNT_SID)\n    const accountToken = await getSandboxProperty('TWILIO_AUTH_TOKEN', options.globalSettings.TWILIO_AUTH_TOKEN)\n    const from =  await getSandboxProperty('FROM_PHONE', options.globalSettings.FROM_PHONE)\n    const message = await getSandboxProperty('MESSAGE')\n    const to = await getSandboxProperty('TO')\n    \n    const enhancedMessage = waylayUtil.template(options, message)\n    const recipientList = to.split(',')\n    const client = new twilio.RestClient(accountSID, accountToken)\n    \n    return Promise.all(recipientList.map(recipient => sendSMS(client, recipient, from, enhancedMessage)))\n}\n\n/**\n * Send an sms\n */\nasync function sendSMS (client, to, from, message) {\n    return new Promise((resolve, reject) => {\n        client.sms.messages.create({\n            to: to,\n            from: from,\n            body: message\n        }, function(err, message) {\n            if (err) return reject(err)\n            console.info('Successfully sent the SMS, message ID is:');\n            console.info(message.sid);\n            console.info('SMS sent on:');\n            console.info(message.dateCreated);\n            resolve()\n        });\n    })\n}\n\n/**\n * Decides wether to get the value from vault or keep the original\n */\nasync function getSandboxProperty (key, defaultValue) {\n    const vaultKeyStart = 'VAULT:'\n    \n    const enhancedProperty = waylayUtil.getProperty(options, key) || defaultValue || ''\n\n    if (_.isEmpty(enhancedProperty) || !enhancedProperty.startsWith(vaultKeyStart)) return enhancedProperty\n    \n    const vaultKey = enhancedProperty.replace(vaultKeyStart, '')\n    \n    return waylay.vault.get(vaultKey)\n        .then(res => {\n            console.log(`Successfully got key from vault ${vaultKey} -> ${res}`)\n            return res\n        })\n        .catch(err => {\n            console.error(`Failed to get property '${enhancedProperty}' from vault`, err)\n            throw err\n        })\n}","metadata":{"author":"","category":"Twilio","description":"Twilio SMS\n\nYou need to get access keys from Twillio and provide them in global settings.\n\nInput parameters are:\n<ul>\n<li>to</li>\n<li>message</li>\n</ul>\n\nYou will to set TWILIO_ACCOUNT_SID and TWILIO_AUTH_TOKEN either through the properties or in the global settings.\n\nMessage will be parsed using waylayUtil.template function.\n","documentationURL":"https://www.twilio.com/blog/2013/03/introducing-the-twilio-module-for-node-js.html","iconURL":"https://static.waylay.io/plugs/icons/twillio.png","supportedStates":[],"requiredProperties":["MESSAGE","TO","TWILIO_ACCOUNT_SID","TWILIO_AUTH_TOKEN","FROM_PHONE"],"requiredRawData":[]}}